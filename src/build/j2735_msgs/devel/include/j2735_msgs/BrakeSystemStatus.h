// Generated by gencpp from file j2735_msgs/BrakeSystemStatus.msg
// DO NOT EDIT!


#ifndef J2735_MSGS_MESSAGE_BRAKESYSTEMSTATUS_H
#define J2735_MSGS_MESSAGE_BRAKESYSTEMSTATUS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <j2735_msgs/BrakeAppliedStatus.h>
#include <j2735_msgs/TractionControlStatus.h>
#include <j2735_msgs/AntiLockBrakeStatus.h>
#include <j2735_msgs/StabilityControlStatus.h>
#include <j2735_msgs/BrakeBoostApplied.h>
#include <j2735_msgs/AuxiliaryBrakeStatus.h>

namespace j2735_msgs
{
template <class ContainerAllocator>
struct BrakeSystemStatus_
{
  typedef BrakeSystemStatus_<ContainerAllocator> Type;

  BrakeSystemStatus_()
    : wheelBrakes()
    , traction()
    , abs()
    , scs()
    , brakeBoost()
    , auxBrakes()  {
    }
  BrakeSystemStatus_(const ContainerAllocator& _alloc)
    : wheelBrakes(_alloc)
    , traction(_alloc)
    , abs(_alloc)
    , scs(_alloc)
    , brakeBoost(_alloc)
    , auxBrakes(_alloc)  {
  (void)_alloc;
    }



   typedef  ::j2735_msgs::BrakeAppliedStatus_<ContainerAllocator>  _wheelBrakes_type;
  _wheelBrakes_type wheelBrakes;

   typedef  ::j2735_msgs::TractionControlStatus_<ContainerAllocator>  _traction_type;
  _traction_type traction;

   typedef  ::j2735_msgs::AntiLockBrakeStatus_<ContainerAllocator>  _abs_type;
  _abs_type abs;

   typedef  ::j2735_msgs::StabilityControlStatus_<ContainerAllocator>  _scs_type;
  _scs_type scs;

   typedef  ::j2735_msgs::BrakeBoostApplied_<ContainerAllocator>  _brakeBoost_type;
  _brakeBoost_type brakeBoost;

   typedef  ::j2735_msgs::AuxiliaryBrakeStatus_<ContainerAllocator>  _auxBrakes_type;
  _auxBrakes_type auxBrakes;





  typedef boost::shared_ptr< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> const> ConstPtr;

}; // struct BrakeSystemStatus_

typedef ::j2735_msgs::BrakeSystemStatus_<std::allocator<void> > BrakeSystemStatus;

typedef boost::shared_ptr< ::j2735_msgs::BrakeSystemStatus > BrakeSystemStatusPtr;
typedef boost::shared_ptr< ::j2735_msgs::BrakeSystemStatus const> BrakeSystemStatusConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator1> & lhs, const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator2> & rhs)
{
  return lhs.wheelBrakes == rhs.wheelBrakes &&
    lhs.traction == rhs.traction &&
    lhs.abs == rhs.abs &&
    lhs.scs == rhs.scs &&
    lhs.brakeBoost == rhs.brakeBoost &&
    lhs.auxBrakes == rhs.auxBrakes;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator1> & lhs, const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace j2735_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "29e024d3832cf8923126d15f9168e8dd";
  }

  static const char* value(const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x29e024d3832cf892ULL;
  static const uint64_t static_value2 = 0x3126d15f9168e8ddULL;
};

template<class ContainerAllocator>
struct DataType< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "j2735_msgs/BrakeSystemStatus";
  }

  static const char* value(const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "#\n"
"# BrakeSystemStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# Conveys a variety of information about the current brake and system control activity of the vehicle.\n"
"\n"
"#BrakeSystemStatus ::= SEQUENCE { \n"
"#   wheelBrakes        BrakeAppliedStatus,\n"
"#   traction           TractionControlStatus,\n"
"#   abs                AntiLockBrakeStatus, \n"
"#   scs                StabilityControlStatus,\n"
"#   brakeBoost         BrakeBoostApplied, \n"
"#   auxBrakes          AuxiliaryBrakeStatus\n"
"#   }\n"
"\n"
"#BrakeAppliedStatus ::= BIT STRING {\n"
"#   unavailable (0),  -- When set, the brake applied status is unavailable\n"
"#   leftFront   (1),  -- Left Front Active\n"
"#   leftRear    (2),  -- Left Rear Active\n"
"#   rightFront  (3),  -- Right Front Active\n"
"#   rightRear   (4)   -- Right Rear Active\n"
"#   } (SIZE (5))\n"
"#   \n"
"j2735_msgs/BrakeAppliedStatus wheelBrakes\n"
"\n"
"#TractionControlStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Not Equipped with traction control \n"
"#                    --       or traction control status is unavailable\n"
"#   off         (1), -- B'01  traction control is Off\n"
"#   on          (2), -- B'10  traction control is On (but not Engaged)\n"
"#   engaged     (3)  -- B'11  traction control is Engaged\n"
"#   }\n"
"#\n"
"j2735_msgs/TractionControlStatus traction\n"
"\n"
"#AntiLockBrakeStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Vehicle Not Equipped with ABS Brakes \n"
"#                    --       or ABS Brakes status is unavailable\n"
"#   off         (1), -- B'01  Vehicle's ABS are Off\n"
"#   on          (2), -- B'10  Vehicle's ABS are On ( but not Engaged )\n"
"#   engaged     (3)  -- B'11  Vehicle's ABS control is Engaged on any wheel\n"
"#   }\n"
"#\n"
"j2735_msgs/AntiLockBrakeStatus abs\n"
"\n"
"#StabilityControlStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Not Equipped with SC\n"
"#                    --       or SC status is unavailable\n"
"#   off         (1), -- B'01  Off\n"
"#   on          (2), -- B'10  On or active (but not engaged)\n"
"#   engaged     (3)  -- B'11  stability control is Engaged \n"
"#   }\n"
"#   \n"
"j2735_msgs/StabilityControlStatus scs\n"
"\n"
"#BrakeBoostApplied ::= ENUMERATED {\n"
"#   unavailable   (0), -- Vehicle not equipped with brake boost\n"
"#                      -- or brake boost data is unavailable\n"
"#   off           (1), -- Vehicle's brake boost is off\n"
"#   on            (2)  -- Vehicle's brake boost is on (applied)\n"
"#   }\n"
"#   \n"
"j2735_msgs/BrakeBoostApplied brakeBoost\n"
"\n"
"#AuxiliaryBrakeStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Vehicle Not Equipped with Aux Brakes \n"
"#                    --       or Aux Brakes status is unavailable\n"
"#   off         (1), -- B'01  Vehicle's Aux Brakes are Off\n"
"#   on          (2), -- B'10  Vehicle's Aux Brakes are On ( Engaged )\n"
"#   reserved    (3)  -- B'11 \n"
"#   }   \n"
"\n"
"j2735_msgs/AuxiliaryBrakeStatus auxBrakes\n"
"================================================================================\n"
"MSG: j2735_msgs/BrakeAppliedStatus\n"
"#\n"
"# BrakeAppliedStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"# \n"
"\n"
"#BrakeAppliedStatus ::= BIT STRING {\n"
"#   unavailable (0),  -- When set, the brake applied status is unavailable\n"
"#   leftFront   (1),  -- Left Front Active\n"
"#   leftRear    (2),  -- Left Rear Active\n"
"#   rightFront  (3),  -- Right Front Active\n"
"#   rightRear   (4)   -- Right Rear Active\n"
"#   } (SIZE (5))\n"
"#   \n"
"\n"
"uint8  brake_applied_status\n"
"\n"
"uint8 UNAVAILABLE=0\n"
"uint8 LEFT_FRONT=1\n"
"uint8 LEFT_REAR=2\n"
"uint8 RIGHT_FRONT=3\n"
"uint8 RIGHT_REAR=4\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/TractionControlStatus\n"
"#\n"
"# TractionControlStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"\n"
"#TractionControlStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Not Equipped with traction control \n"
"#                    --       or traction control status is unavailable\n"
"#   off         (1), -- B'01  traction control is Off\n"
"#   on          (2), -- B'10  traction control is On (but not Engaged)\n"
"#   engaged     (3)  -- B'11  traction control is Engaged\n"
"#   }\n"
"#\n"
"\n"
"uint8  traction_control_status \n"
"\n"
"# enumeration values for status:\n"
"uint8  UNAVAILABLE=0\n"
"uint8  OFF=1\n"
"uint8  ON=2\n"
"uint8  ENGAGED=3\n"
"\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/AntiLockBrakeStatus\n"
"#\n"
"# AntiLockBrakeStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"\n"
"#AntiLockBrakeStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Vehicle Not Equipped with ABS Brakes \n"
"#                    --       or ABS Brakes status is unavailable\n"
"#   off         (1), -- B'01  Vehicle's ABS are Off\n"
"#   on          (2), -- B'10  Vehicle's ABS are On ( but not Engaged )\n"
"#   engaged     (3)  -- B'11  Vehicle's ABS control is Engaged on any wheel\n"
"#   }\n"
"#\n"
"\n"
"uint8  anti_lock_brake_status \n"
"\n"
"# enumeration values for status:\n"
"uint8  UNAVAILABLE=0\n"
"uint8  OFF=1\n"
"uint8  ON=2\n"
"uint8  ENGAGED=3\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/StabilityControlStatus\n"
"#\n"
"# StabilityControlStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"\n"
"#StabilityControlStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Not Equipped with SC\n"
"#                    --       or SC status is unavailable\n"
"#   off         (1), -- B'01  Off\n"
"#   on          (2), -- B'10  On or active (but not engaged)\n"
"#   engaged     (3)  -- B'11  stability control is Engaged \n"
"#   }\n"
"#   \n"
"\n"
"uint8  stability_control_status \n"
"\n"
"# enumeration values for status:\n"
"uint8  UNAVAILABLE=0\n"
"uint8  OFF=1\n"
"uint8  ON=2\n"
"uint8  ENGAGED=3\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/BrakeBoostApplied\n"
"#\n"
"# BrakeBoostApplied.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"\n"
"#BrakeBoostApplied ::= ENUMERATED {\n"
"#   unavailable   (0), -- Vehicle not equipped with brake boost\n"
"#                      -- or brake boost data is unavailable\n"
"#   off           (1), -- Vehicle's brake boost is off\n"
"#   on            (2)  -- Vehicle's brake boost is on (applied)\n"
"#   }\n"
"#   \n"
"\n"
"uint8  brake_boost_applied\n"
"\n"
"# enumeration values for status:\n"
"uint8  UNAVAILABLE=0\n"
"uint8  OFF=1\n"
"uint8  ON=2\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/AuxiliaryBrakeStatus\n"
"#\n"
"# AuxiliaryBrakeStatus.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"\n"
"#AuxiliaryBrakeStatus ::= ENUMERATED {\n"
"#   unavailable (0), -- B'00  Vehicle Not Equipped with Aux Brakes \n"
"#                    --       or Aux Brakes status is unavailable\n"
"#   off         (1), -- B'01  Vehicle's Aux Brakes are Off\n"
"#   on          (2), -- B'10  Vehicle's Aux Brakes are On ( Engaged )\n"
"#   reserved    (3)  -- B'11 \n"
"#   }   \n"
"\n"
"uint8  auxiliary_brake_status\n"
"\n"
"# enumeration values for status:\n"
"uint8  UNAVAILABLE=0\n"
"uint8  OFF=1\n"
"uint8  ON=2\n"
"uint8  RESERVED=3\n"
;
  }

  static const char* value(const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.wheelBrakes);
      stream.next(m.traction);
      stream.next(m.abs);
      stream.next(m.scs);
      stream.next(m.brakeBoost);
      stream.next(m.auxBrakes);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct BrakeSystemStatus_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::j2735_msgs::BrakeSystemStatus_<ContainerAllocator>& v)
  {
    s << indent << "wheelBrakes: ";
    s << std::endl;
    Printer< ::j2735_msgs::BrakeAppliedStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.wheelBrakes);
    s << indent << "traction: ";
    s << std::endl;
    Printer< ::j2735_msgs::TractionControlStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.traction);
    s << indent << "abs: ";
    s << std::endl;
    Printer< ::j2735_msgs::AntiLockBrakeStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.abs);
    s << indent << "scs: ";
    s << std::endl;
    Printer< ::j2735_msgs::StabilityControlStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.scs);
    s << indent << "brakeBoost: ";
    s << std::endl;
    Printer< ::j2735_msgs::BrakeBoostApplied_<ContainerAllocator> >::stream(s, indent + "  ", v.brakeBoost);
    s << indent << "auxBrakes: ";
    s << std::endl;
    Printer< ::j2735_msgs::AuxiliaryBrakeStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.auxBrakes);
  }
};

} // namespace message_operations
} // namespace ros

#endif // J2735_MSGS_MESSAGE_BRAKESYSTEMSTATUS_H
