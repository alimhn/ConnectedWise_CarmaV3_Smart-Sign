// Generated by gencpp from file j2735_msgs/SPAT.msg
// DO NOT EDIT!


#ifndef J2735_MSGS_MESSAGE_SPAT_H
#define J2735_MSGS_MESSAGE_SPAT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <j2735_msgs/IntersectionStateList.h>

namespace j2735_msgs
{
template <class ContainerAllocator>
struct SPAT_
{
  typedef SPAT_<ContainerAllocator> Type;

  SPAT_()
    : time_stamp(0)
    , time_stamp_exists(false)
    , name()
    , name_exists(false)
    , intersections()  {
    }
  SPAT_(const ContainerAllocator& _alloc)
    : time_stamp(0)
    , time_stamp_exists(false)
    , name(_alloc)
    , name_exists(false)
    , intersections(_alloc)  {
  (void)_alloc;
    }



   typedef uint32_t _time_stamp_type;
  _time_stamp_type time_stamp;

   typedef uint8_t _time_stamp_exists_type;
  _time_stamp_exists_type time_stamp_exists;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _name_type;
  _name_type name;

   typedef uint8_t _name_exists_type;
  _name_exists_type name_exists;

   typedef  ::j2735_msgs::IntersectionStateList_<ContainerAllocator>  _intersections_type;
  _intersections_type intersections;





  typedef boost::shared_ptr< ::j2735_msgs::SPAT_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::j2735_msgs::SPAT_<ContainerAllocator> const> ConstPtr;

}; // struct SPAT_

typedef ::j2735_msgs::SPAT_<std::allocator<void> > SPAT;

typedef boost::shared_ptr< ::j2735_msgs::SPAT > SPATPtr;
typedef boost::shared_ptr< ::j2735_msgs::SPAT const> SPATConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::j2735_msgs::SPAT_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::j2735_msgs::SPAT_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::j2735_msgs::SPAT_<ContainerAllocator1> & lhs, const ::j2735_msgs::SPAT_<ContainerAllocator2> & rhs)
{
  return lhs.time_stamp == rhs.time_stamp &&
    lhs.time_stamp_exists == rhs.time_stamp_exists &&
    lhs.name == rhs.name &&
    lhs.name_exists == rhs.name_exists &&
    lhs.intersections == rhs.intersections;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::j2735_msgs::SPAT_<ContainerAllocator1> & lhs, const ::j2735_msgs::SPAT_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace j2735_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::j2735_msgs::SPAT_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::j2735_msgs::SPAT_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::j2735_msgs::SPAT_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::j2735_msgs::SPAT_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::j2735_msgs::SPAT_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::j2735_msgs::SPAT_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::j2735_msgs::SPAT_<ContainerAllocator> >
{
  static const char* value()
  {
    return "b4c40f2649b94d25d15c1e9f47c45af8";
  }

  static const char* value(const ::j2735_msgs::SPAT_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xb4c40f2649b94d25ULL;
  static const uint64_t static_value2 = 0xd15c1e9f47c45af8ULL;
};

template<class ContainerAllocator>
struct DataType< ::j2735_msgs::SPAT_<ContainerAllocator> >
{
  static const char* value()
  {
    return "j2735_msgs/SPAT";
  }

  static const char* value(const ::j2735_msgs::SPAT_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::j2735_msgs::SPAT_<ContainerAllocator> >
{
  static const char* value()
  {
    return "#\n"
"# SPAT.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# A complete description of an intersection's roadway geometry and its allowed navigational paths\n"
"# (independent of any additional regulatory restrictions that may apply over time or from user classification).\n"
"\n"
"# The SPAT message sends the current movement state of each active phase in the system as needed (such as values of\n"
"# what states are active and values at what time a state has begun/does begin earliest, is expected to begin most likely and\n"
"# will end latest). The state of inactive movements is not normally transmitted. Movements are mapped to specific\n"
"# approaches and connections of ingress to egress lanes and by use of the SignalGroupID in the MapData message\n"
"\n"
"# SPAT ::= SEQUENCE {\n"
"# 	timeStamp MinuteOfTheYear OPTIONAL,\n"
"# 	name DescriptiveName OPTIONAL,\n"
"# 	-- human readable name for this collection\n"
"# 	-- to be used only in debug mode\n"
"# 	intersections IntersectionStateList,\n"
"# 	-- sets of SPAT data (one per intersection)\n"
"#\n"
"# 	-- If PrioritizationResponse data is required, it is found\n"
"# 	-- in the RegionalSPAT entry below\n"
"#\n"
"# 	regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-SPAT}} OPTIONAL,\n"
"# 	...\n"
"# }\n"
"\n"
"#MinuteOfTheYear OPTIONAL ::= INTEGER (0..527040)\n"
"# -- The value 527040 shall be used for invalid\n"
"\n"
"uint32 time_stamp\n"
"bool time_stamp_exists\n"
"\n"
"# name DescriptiveName OPTIONAL := IA5String (SIZE(1..63))\n"
"# -- often for debug use only\n"
"# -- but at times used to name ped crossings\n"
"string name\n"
"bool name_exists\n"
"\n"
"j2735_msgs/IntersectionStateList intersections\n"
"\n"
"# regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/IntersectionStateList\n"
"#\n"
"# IntersectionStateList.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The IntersectionStateList data frame consists of a list of IntersectionState entries.\n"
"\n"
"# IntersectionStateList ::= SEQUENCE (SIZE(1..32)) OF IntersectionState\n"
"\n"
"j2735_msgs/IntersectionState[] intersection_state_list\n"
"================================================================================\n"
"MSG: j2735_msgs/IntersectionState\n"
"#\n"
"# IntersectionState.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The IntersectionState data frame is used to convey all the SPAT information for a single intersection. Both current\n"
"# and future data can be sent.\n"
"#\n"
"# IntersectionState ::= SEQUENCE {\n"
"# 	name DescriptiveName OPTIONAL,\n"
"# 	-- human readable name for intersection\n"
"# 	-- to be used only in debug mode\n"
"# 	id IntersectionReferenceID,\n"
"# 	-- A globally unique value set, consisting of a\n"
"# 	-- regionID and intersection ID assignment\n"
"# 	-- provides a unique mapping to the\n"
"# 	-- intersection MAP in question\n"
"# 	-- which provides complete location\n"
"# 	-- and approach/move/lane data\n"
"# 	revision MsgCount,\n"
"# 	status IntersectionStatusObject,\n"
"# 	-- general status of the controller(s)\n"
"# 	moy MinuteOfTheYear OPTIONAL,\n"
"# 	-- Minute of current UTC year\n"
"# 	-- used only with messages to be archived\n"
"# 	timeStamp DSecond OPTIONAL,\n"
"# 	-- the mSec point in the current UTC minute that\n"
"# 	-- this message was constructed\n"
"# 	enabledLanes EnabledLaneList OPTIONAL,\n"
"# 	-- a list of lanes where the RevocableLane bit\n"
"# 	-- has been set which are now active and\n"
"# 	-- therefore part of the current intersection\n"
"# 	states MovementList,\n"
"# 	-- Each Movement is given in turn\n"
"# 	-- and contains its signal phase state,\n"
"# 	-- mapping to the lanes it applies to, and\n"
"# 	-- point in time it will end, and it\n"
"# 	-- may contain both active and future states\n"
"# 	maneuverAssistList ManeuverAssistList OPTIONAL,\n"
"# 	-- Assist data\n"
"# 	regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-IntersectionState}} OPTIONAL,\n"
"# 	...\n"
"# }\n"
"\n"
"# name DescriptiveName OPTIONAL := IA5String (SIZE(1..63))\n"
"# -- often for debug use only\n"
"# -- but at times used to name ped crossings\n"
"# NOTE: As optional field, blank value can note that it's not set in carma.\n"
"string name\n"
"bool name_exists\n"
"\n"
"j2735_msgs/IntersectionReferenceID id\n"
"\n"
"#MsgCount ::= INTEGER (0..127)\n"
"uint8 revision\n"
"\n"
"j2735_msgs/IntersectionStatusObject status\n"
"\n"
"#MinuteOfTheYear OPTIONAL ::= INTEGER (0..527040)\n"
"# The value of 527040 shall be used for invalid\n"
"uint32 moy\n"
"uint32 MOY_INVALID=527040\n"
"bool moy_exists\n"
"\n"
"#DSecond ::= INTEGER (0..65535)\n"
"#  -- Integer values from 0 to 59999 represent the milliseconds within a minute\n"
"#  -- A leap second is represented by the value range 60000 to 60999\n"
"#  -- The values from 61000 to 65534 are reserved\n"
"#  -- The value of 65535 shall represent an unavailable value in the range of the minute\n"
"#  -- Unit is milliseconds\n"
"uint32 time_stamp\n"
"uint32 TIME_STAMP_UNAVAILABLE=65535\n"
"bool time_stamp_exists\n"
"\n"
"# enabledLanes EnabledLaneList\n"
"# This is a list therefore can be empty list in ROS.\n"
"j2735_msgs/EnabledLaneList enabled_lanes\n"
"bool enabled_lanes_exists\n"
"\n"
"# 	states MovementList\n"
"j2735_msgs/MovementList states\n"
"\n"
"# 	maneuverAssistList ManeuverAssistList\n"
"j2735_msgs/ManeuverAssistList maneuever_assist_list\n"
"bool maneuever_assist_list_exists\n"
"\n"
"# regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/IntersectionReferenceID\n"
"#\n"
"# IntersectionReferenceID.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The IntersectionReferenceID data frame conveys the combination of an optional RoadRegulatorID and of an\n"
"# IntersectionID that is unique within that region. When the RoadRegulatorID is present the IntersectionReferenceID is\n"
"# guaranteed to be globally unique.\n"
"\n"
"# region RoadRegulatorID OPTIONAL ::= INTEGER (0..65535)\n"
"# -- a globally unique regional assignment value\n"
"# -- typical assigned to a regional DOT authority\n"
"# -- the value zero shall be used for testing needs\n"
"# 0 is a J2735 value for testing needs, and carma can use it to indicate optional field was not set or unavailable.\n"
"uint16 region\n"
"uint16 REGION_UNAVAILABLE=0\n"
"bool region_exists\n"
"\n"
"# id IntersectionID ::= INTEGER (0..65535)\n"
"# -- a unique mapping to the intersection\n"
"# -- in question within the above region of use\n"
"uint16 id\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/IntersectionStatusObject\n"
"#\n"
"# IntersectionStatusObject.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The Intersection Status Object contains Advanced Traffic Controller (ATC) status information that may be sent to\n"
"# local OBUs as part of the SPAT process.\n"
"\n"
"# IntersectionStatusObject ::= BIT STRING {\n"
"# manualControlIsEnabled (0),\n"
"# -- Timing reported is per programmed values, etc. but person\n"
"# -- at cabinet can manually request that certain intervals are\n"
"# -- terminated early (e.g. green).\n"
"# stopTimeIsActivated (1),\n"
"# -- And all counting/timing has stopped.\n"
"# failureFlash (2),\n"
"# -- Above to be used for any detected hardware failures,\n"
"# -- e.g. conflict monitor as well as for police flash\n"
"# preemptIsActive (3),\n"
"# signalPriorityIsActive (4),\n"
"# -- Additional states\n"
"# fixedTimeOperation (5),\n"
"# -- Schedule of signals is based on time only\n"
"# -- (i.e. the state can be calculated)\n"
"# trafficDependentOperation (6),\n"
"# -- Operation is based on different levels of traffic parameters\n"
"# -- (requests, duration of gaps or more complex parameters)\n"
"# standbyOperation (7),\n"
"# -- Controller: partially switched off or partially amber flashing\n"
"# failureMode (8),\n"
"# -- Controller has a problem or failure in operation\n"
"# off (9),\n"
"# -- Controller is switched off\n"
"# -- Related to MAP and SPAT bindings\n"
"# recentMAPmessageUpdate (10),\n"
"# -- Map revision with content changes\n"
"# recentChangeInMAPassignedLanesIDsUsed (11),\n"
"# -- Change in MAP's assigned lanes used (lane changes)\n"
"# -- Changes in the active lane list description\n"
"# noValidMAPisAvailableAtThisTime (12),\n"
"# -- MAP (and various lanes indexes) not available\n"
"# noValidSPATisAvailableAtThisTime (13)\n"
"# -- SPAT system is not working at this time\n"
"# -- Bits 14,15 reserved at this time and shall be zero\n"
"# } (SIZE(16))\n"
"\n"
"uint16 intersection_status_object\n"
"================================================================================\n"
"MSG: j2735_msgs/EnabledLaneList\n"
"#\n"
"# EnabledLaneList.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The Enabled Lane List data frame is a sequence of lane IDs for lane objects that are activated in the current map\n"
"# configuration. These lanes, unlike most lanes, have their RevocableLane bit set to one (asserted). Such lanes are not\n"
"# considered to be part of the current map unless they are in the Enabled Lane List. This concept is used to describe all the\n"
"# possible regulatory states for a given physical lane.\n"
"#\n"
"# EnabledLaneList ::= SEQUENCE (SIZE(1..16)) OF LaneID\n"
"#-- The unique ID numbers for each\n"
"#-- lane object which is 'active'\n"
"#-- as part of the dynamic map contents.\n"
"\n"
"# LaneID ::= INTEGER (0..255)\n"
"# -- the value 0 shall be used when the lane ID is not available or not known\n"
"# -- the value 255 is reserved for future use\n"
"uint16[] lane_id_list\n"
"================================================================================\n"
"MSG: j2735_msgs/MovementList\n"
"#\n"
"# MovementList.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The MovementList data frame consists of a list of MovementState entries.\n"
"#\n"
"# MovementList ::= SEQUENCE (SIZE(1..255)) OF MovementState\n"
"\n"
"j2735_msgs/MovementState[] movement_list\n"
"================================================================================\n"
"MSG: j2735_msgs/MovementState\n"
"#\n"
"# MovementState.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The MovementState data frame is used to convey various information about the current or future movement state of\n"
"# a designated collection of one or more lanes of a common type. This is referred to as the GroupID. Note that lane object\n"
"# types supported include both motorized vehicle lanes as well as pedestrian lanes and dedicated rail and transit lanes. Of\n"
"# the reported data elements, the time to change (the time remaining in the current state) is often of the most value. Lanes\n"
"# with a common state (typically adjacent sets of lanes in an approach) in a signalized intersection will have individual lane\n"
"# values such as total vehicle counts, summed. It is used in the SPAT message to convey every active movement in a\n"
"# given intersection so that vehicles, when combined with certain map information, can determine the state of the signal\n"
"# phases.\n"
"#\n"
"# MovementState ::= SEQUENCE {\n"
"# movementName DescriptiveName OPTIONAL,\n"
"# -- uniquely defines movement by name\n"
"# -- human readable name for intersection\n"
"# -- to be used only in debug mode\n"
"# signalGroup SignalGroupID,\n"
"# -- the group id is used to map to lists\n"
"# -- of lanes (and their descriptions)\n"
"# -- which this MovementState data applies to\n"
"# -- see comments in the Remarks for usage details\n"
"# state-time-speed MovementEventList,\n"
"# -- Consisting of sets of movement data with:\n"
"# -- a) SignalPhaseState\n"
"# -- b) TimeChangeDetails, and\n"
"# -- c) AdvisorySpeeds (optional )\n"
"# -- Note one or more of the movement events may be for\n"
"# -- a future time and that this allows conveying multiple\n"
"# -- predictive phase and movement timing for various uses\n"
"# -- for the current signal group\n"
"# maneuverAssistList ManeuverAssistList OPTIONAL,\n"
"# -- This information may also be placed in the\n"
"# -- IntersectionState when common information applies to\n"
"# -- different lanes in the same way\n"
"# regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-MovementState}} OPTIONAL,\n"
"# ...\n"
"# }\n"
"\n"
"\n"
"# DescriptiveName OPTIONAL := IA5String (SIZE(1..63))\n"
"# -- often for debug use only\n"
"# -- but at times used to name ped crossings\n"
"string movement_name\n"
"bool movement_name_exists\n"
"\n"
"# SignalGroupID ::= INTEGER (0..255)\n"
"# -- The value 0 shall be used when the ID is\n"
"# -- not available or known\n"
"# -- the value 255 is reserved to indicate a\n"
"# -- permanent green movement state\n"
"uint8 signal_group\n"
"\n"
"# state-time-speed MovementEventList\n"
"j2735_msgs/MovementEventList state_time_speed\n"
"\n"
"j2735_msgs/ManeuverAssistList maneuver_assist_list\n"
"bool maneuver_assist_list_exists\n"
"\n"
"# regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/MovementEventList\n"
"#\n"
"# MovementEventList.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The MovementEventList data frame consists of a list of MovementEvent entries.\n"
"#\n"
"# MovementEventList ::= SEQUENCE (SIZE(1..16)) OF MovementEvent\n"
"#\n"
"\n"
"j2735_msgs/MovementEvent[] movement_event_list\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/MovementEvent\n"
"#\n"
"# MovementEvent.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The MovementEvent data frame contains details about a single movement. It is used by the movement state to\n"
"# convey one of number of movements (typically occurring over a sequence of times) for a SignalGroupID.\n"
"#\n"
"# MovementEvent ::= SEQUENCE {\n"
"# eventState MovementPhaseState,\n"
"# -- Consisting of:\n"
"# -- Phase state (the basic 11 states)\n"
"# -- Directional, protected, or permissive state\n"
"# timing TimeChangeDetails OPTIONAL,\n"
"# -- Timing Data in UTC time stamps for event\n"
"# -- includes start and min/max end times of phase\n"
"# -- confidence and estimated next occurrence\n"
"# speeds AdvisorySpeedList OPTIONAL,\n"
"# -- various speed advisories for use by\n"
"# -- general and specific types of vehicles\n"
"# -- supporting green-wave and other flow needs\n"
"# -- See Section 11 for converting and translating\n"
"# -- speed expressed in mph into units of m/s\n"
"# regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-MovementEvent}} OPTIONAL,\n"
"# ...\n"
"# }\n"
"\n"
"j2735_msgs/MovementPhaseState event_state\n"
"\n"
"j2735_msgs/TimeChangeDetails timing\n"
"bool timing_exists\n"
"\n"
"j2735_msgs/AdvisorySpeedList speeds\n"
"bool speeds_exists\n"
"\n"
"#regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
"\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/MovementPhaseState\n"
"#\n"
"# MovementEvent.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The DE_MovementPhaseState data element provides the overall current state of the movement (in many cases a\n"
"# signal state), including its core phase state and an indication of whether this state is permissive or protected.\n"
"#\n"
"# MovementPhaseState ::= ENUMERATED {\n"
"# -- Note that based on the regions and the operating mode not every\n"
"# -- phase will be used in all transportation modes and that not\n"
"# -- every phase will be used in all transportation modes\n"
"# unavailable (0),\n"
"# -- This state is used for unknown or error\n"
"# dark (1),\n"
"# -- The signal head is dark (unlit)\n"
"# -- Reds\n"
"# stop-Then-Proceed (2),\n"
"# -- Often called 'flashing red' in US\n"
"# -- Driver Action:\n"
"# -Stop vehicle at stop line.\n"
"# -Do not proceed unless it is safe.\n"
"# -- Note that the right to proceed either right or left\n"
"# -- it is safe may be contained in the lane description\n"
"# -- handle what is called a 'right on red'\n"
"# stop-And-Remain (3),\n"
"# -- e.g. called 'red light' in US\n"
"# -- Driver Action:\n"
"# -Stop vehicle at stop line.\n"
"# -Do not proceed.\n"
"# -- Note that the right to proceed either right or left\n"
"# -- it is safe may be contained in the lane description\n"
"# -- handle what is called a 'right on red'\n"
"# -- Greens\n"
"# pre-Movement (4),\n"
"# -- Not used in the US, red+yellow partly in EU\n"
"# -- Driver Action:\n"
"# -Stop vehicle.\n"
"# -Prepare to proceed (pending green)\n"
"# -(Prepare for transition to green/go)\n"
"# permissive-Movement-Allowed (5),\n"
"# -- Often called 'permissive green' in US\n"
"# -- Driver Action:\n"
"# -Proceed with caution,\n"
"# -must yield to all conflicting traffic\n"
"# -- Conflicting traffic may be present\n"
"# -- in the intersection conflict area\n"
"# protected-Movement-Allowed (6),\n"
"# -- Often called 'protected green' in US\n"
"# -- Driver Action:\n"
"# -Proceed, tossing caution to the wind,\n"
"# -in indicated (allowed) direction.\n"
"# -- Yellows / Ambers\n"
"# -- The vehicle is not allowed to cross the stop bar if it is possible\n"
"# -- to stop without danger.\n"
"# permissive-clearance (7),\n"
"# -- Often called 'permissive yellow' in US\n"
"# -- Driver Action:\n"
"# -Prepare to stop.\n"
"# -Proceed if unable to stop,\n"
"# -Clear Intersection.\n"
"# -- Conflicting traffic may be present\n"
"# -- in the intersection conflict area\n"
"# protected-clearance (8),\n"
"# -- Often called 'protected yellow' in US\n"
"# -- Driver Action:\n"
"# -Prepare to stop.\n"
"# -Proceed if unable to stop,\n"
"# -in indicated direction (to connected lane)\n"
"# -Clear Intersection.\n"
"# caution-Conflicting-Traffic (9)\n"
"# -- Often called 'flashing yellow' in US\n"
"# -- Often used for extended periods of time\n"
"# -- Driver Action:\n"
"# -Proceed with caution,\n"
"# -- Conflicting traffic may be present\n"
"# -- in the intersection conflict area\n"
"# }\n"
"# -- The above number assignments are not used with UPER encoding\n"
"# -- and are only to be used with DER or implicit encoding\n"
"\n"
"uint8 movement_phase_state\n"
"\n"
"uint8 UNAVAILABLE=0\n"
"uint8 DARK=1\n"
"uint8 STOP_THEN_PROCEED=2\n"
"uint8 STOP_AND_REMAIN=3\n"
"uint8 PRE_MOVEMENT=4\n"
"uint8 PERMISSIVE_MOVEMENT_ALLOWED=5\n"
"uint8 PROTECTED_MOVEMENT_ALLOWED=6\n"
"uint8 PERMISSIVE_CLEARANCE=7\n"
"uint8 PROTECTED_CLEARANCE=8\n"
"uint8 CAUTION_CONFLICTING_TRAFFIC=9\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/TimeChangeDetails\n"
"#\n"
"# TimeChangeDetails.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The DF_TimeChangeDetails data frame conveys details about the timing of a phase within a movement. The core\n"
"# data concept expressed is the time stamp (time mark) at which the related phase will change to the next state. This is\n"
"# often found in the MinEndTime element, but the other elements may be needed to convey the full concept when adaptive\n"
"# timing is employed.\n"
"#\n"
"#\n"
"# TimeChangeDetails ::= SEQUENCE {\n"
"# startTime TimeMark OPTIONAL,\n"
"# -- When this phase 1st started\n"
"# minEndTime TimeMark,\n"
"# -- Expected shortest end time\n"
"# maxEndTime TimeMark OPTIONAL,\n"
"# -- Expected longest end time\n"
"# likelyTime TimeMark OPTIONAL,\n"
"# -- Best predicted value based on other data\n"
"# confidence TimeIntervalConfidence OPTIONAL,\n"
"# -- Applies to above time element only\n"
"# nextTime TimeMark OPTIONAL\n"
"# -- A rough estimate of time when\n"
"# -- this phase may next occur again\n"
"# -- used to support various ECO driving power\n"
"# -- management needs.\n"
"# }\n"
"\n"
"# TimeMark ::= INTEGER (0..36001)\n"
"# -- Tenths of a second in the current or next hour\n"
"# -- In units of 1/10th second from UTC time\n"
"# -- A range of 0~36000 covers one hour\n"
"# -- The values 35991..35999 are used when a leap second occurs\n"
"# -- The value 36000 is used to indicate time >3600 seconds\n"
"# -- 36001 is to be used when value undefined or unknown\n"
"# -- Note that this is NOT expressed in GPS time\n"
"# -- or in local time\n"
"uint16 start_time\n"
"bool start_time_exists\n"
"\n"
"uint16 min_end_time\n"
"\n"
"uint16 max_end_time\n"
"bool max_end_time_exists\n"
"\n"
"uint16 likely_time\n"
"bool likely_time_exists\n"
"\n"
"#TimeIntervalConfidence ::= INTEGER (0..15)\n"
"uint8 confidence\n"
"bool confidence_exists\n"
"\n"
"# TimeMark ::= INTEGER (0..36001)\n"
"uint16 next_time\n"
"bool next_time_exists\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/AdvisorySpeedList\n"
"#\n"
"# AdvisorySpeedList.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The AdvisorySpeedList data frame consists of a list of AdvisorySpeed entries.\n"
"#\n"
"# AdvisorySpeedList ::= SEQUENCE (SIZE(1..16)) OF AdvisorySpeed\n"
"\n"
"j2735_msgs/AdvisorySpeed[] advisory_speed_list\n"
"================================================================================\n"
"MSG: j2735_msgs/AdvisorySpeed\n"
"#\n"
"# AdvisorySpeed.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The DF_AdvisorySpeed data frame is used to convey a recommended traveling approach speed to an intersection\n"
"# from the message issuer to various travelers and vehicle types. Besides support for various eco-driving applications, this\n"
"# allows transmitting recommended speeds for specialty vehicles such as transit buses.\n"
"# AdvisorySpeed ::= SEQUENCE {\n"
"# type AdvisorySpeedType,\n"
"# -- the type of advisory which this is.\n"
"# speed SpeedAdvice OPTIONAL,\n"
"# -- See Section 11 for converting and translating speed\n"
"# -- expressed in mph into units of m/s\n"
"# -- This element is optional ONLY when superceded\n"
"# -- by the presence of a regional speed element found in\n"
"# -- Reg-AdvisorySpeed entry\n"
"# confidence SpeedConfidence OPTIONAL,\n"
"# -- A confidence value for the above speed\n"
"# distance ZoneLength OPTIONAL,\n"
"# -- Unit = 1 meter,\n"
"# -- The distance indicates the region for which the advised speed\n"
"# -- is recommended, it is specified upstream from the stop bar\n"
"# -- along the connected egressing lane\n"
"# class RestrictionClassID OPTIONAL,\n"
"# -- the vehicle types to which it applies\n"
"# -- when absent, the AdvisorySpeed applies to\n"
"# -- all motor vehicle types\n"
"# regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-AdvisorySpeed}} OPTIONAL,\n"
"# ...\n"
"# }\n"
"\n"
"j2735_msgs/AdvisorySpeedType type\n"
"\n"
"# SpeedAdvice ::= INTEGER (0..500) OPTIONAL\n"
"# This data element represents the recommended velocity of an object, typically a vehicle speed along a roadway,\n"
"# expressed in unsigned units of 0.1 meters per second.\n"
"#-- LSB units are 0.1 m/s^2\n"
"#-- the value 499 shall be used for values at or greater than 49.9 m/s\n"
"#-- the value 500 shall be used to indicate that speed is unavailable\n"
"float32 speed\n"
"float32 SPEED_UNAVAILABLE = 500\n"
"bool speed_exists\n"
"\n"
"# SpeedConfidence is an enum already with 0 as unavailable.\n"
"j2735_msgs/SpeedConfidence confidence\n"
"\n"
"# ZoneLength ::= INTEGER (0..10000)\n"
"# -- Unit = 1 meter, 0 = unknown,\n"
"# -- The value 10000 to be used for Distances >=10000 m\n"
"# -- (e.g. from known point to another point along a\n"
"# -- known path, often against traffic flow direction\n"
"# -- when used for measuring queues)\n"
"uint16 distance\n"
"uint16 DISTANCE_UNKNOWN=0\n"
"bool distance_exists\n"
"\n"
"# RestrictionClassID ::= INTEGER (0..255)\n"
"uint8 restriction_class_id\n"
"bool restriction_class_id_exists\n"
"\n"
"# regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
"\n"
"\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/AdvisorySpeedType\n"
"#\n"
"# AdvisorySpeedType.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The DE_AdvisorySpeedType data element relates the type of travel to which a given speed refers. This element is\n"
"# typically used as part of an AdvisorySpeed data frame for signal phase and timing data.\n"
"#\n"
"# AdvisorySpeedType ::= ENUMERATED {\n"
"# none (0),\n"
"# greenwave (1),\n"
"# ecoDrive (2),\n"
"# transit (3),\n"
"# ...\n"
"# } -- Note: subject to further growth\n"
"\n"
"uint8 advisory_speed_type\n"
"\n"
"uint8 NONE=0\n"
"uint8 GREENWAVE=1\n"
"uint8 ECODRIVE=2\n"
"uint8 TRANSIT=3\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/SpeedConfidence\n"
"#\n"
"# SpeedConfidence.msg\n"
"#\n"
"# J2735 2016 message format.\n"
"#\n"
"# @author Mae Fromm\n"
"# @version 0.1\n"
"#\n"
"# The DE_SpeedConfidence data element is used to provide the 95% confidence level for the currently reported\n"
"# value of DE_Speed, taking into account the current calibration and precision of the sensor(s) used to measure and/or\n"
"# calculate the value.\n"
"\n"
"# SpeedConfidence ::= ENUMERATED {\n"
"# unavailable (0), -- Not Equipped or unavailable\n"
"# prec100ms (1), -- 100 meters / sec\n"
"# prec10ms(2), -- 10 meters / sec\n"
"# prec5ms (3), -- 5 meters / sec\n"
"# prec1ms (4), -- 1 meters / sec\n"
"# prec0-1ms (5), -- 0.1 meters / sec\n"
"# prec0-05ms (6), -- -- 0.05 meters / sec\n"
"# prec0-01ms (7) -- -- 0.01 meters / sec\n"
"# }\n"
"\n"
"uint8 speed_confidence\n"
"\n"
"uint8 UNAVAILABLE=0\n"
"uint8 PREC100MS=1\n"
"uint8 PREC10MS=2\n"
"uint8 PREC5MS=3\n"
"uint8 PREC1MS=4\n"
"uint8 PREC0_1MS=5\n"
"uint8 PREC0_05MS=6\n"
"uint8 PREC0_01MS=7\n"
"================================================================================\n"
"MSG: j2735_msgs/ManeuverAssistList\n"
"# This entry is used directly by one other data structure in this standard, a DF called DF_LaneAttributes <ASN>.\n"
"#  In addition, this item may be used by data structures in other ITS standards.\n"
"# ManeuverAssistList ::= SEQUENCE (SIZE(1..16)) OF ConnectionManeuverAssist\n"
"\n"
"j2735_msgs/ConnectionManeuverAssist[] connection_maneuver_assist_list\n"
"\n"
"================================================================================\n"
"MSG: j2735_msgs/ConnectionManeuverAssist\n"
"\n"
"# The ConnectionManeuverAssist data frame contains information about the the dynamic flow of traffic for the lane(s)\n"
"# and maneuvers in question (as determined by the LaneConnectionID). Note that this information can be sent regarding\n"
"# any lane-to-lane movement; it need not be limited to the lanes with active (non-red) phases when sent.\n"
"#\n"
"# ConnectionManeuverAssist ::= SEQUENCE {\n"
"# connectionID LaneConnectionID,\n"
"# -- the common connectionID used by all lanes to which\n"
"# -- this data applies\n"
"# -- (this value traces to ConnectsTo entries in lanes)\n"
"# -- Expected Clearance Information\n"
"# queueLength ZoneLength OPTIONAL,\n"
"# -- Unit = 1 meter, 0 = no queue\n"
"# -- The distance from the stop line to the back\n"
"# -- edge of the last vehicle in the queue,\n"
"# -- as measured along the lane center line.\n"
"# availableStorageLength ZoneLength OPTIONAL,\n"
"# -- Unit = 1 meter, 0 = no space remains\n"
"# -- Distance (e.g. beginning from the downstream\n"
"# -- stop-line up to a given distance) with a high\n"
"# -- probability for successfully executing the\n"
"# -- connecting maneuver between the two lanes\n"
"# -- during the current cycle.\n"
"# -- Used for enhancing the awareness of vehicles\n"
"# -- to anticipate if they can pass the stop line\n"
"# -- of the lane. Used for optimizing the green wave,\n"
"# -- due to knowledge of vehicles waiting in front\n"
"# -- of a red light (downstream).\n"
"# -- The element nextTime in TimeChangeDetails\n"
"# -- in the containing data frame contains the next\n"
"# -- timemark at which an active phase is expected,\n"
"# -- a form of storage flush interval.\n"
"# waitOnStop WaitOnStopline OPTIONAL,\n"
"# -- If \"true\", the vehicles on this specific connecting\n"
"# -- maneuver have to stop on the stop-line and not\n"
"# -- to enter the collision area\n"
"# pedBicycleDetect PedestrianBicycleDetect OPTIONAL,\n"
"# -- true if ANY ped or bicycles are detected crossing\n"
"# -- the above lanes. Set to false ONLY if there is a\n"
"# -- high certainty that there are none present,\n"
"# -- otherwise element is not sent.\n"
"# regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-ConnectionManeuverAssist}} OPTIONAL,\n"
"# ...\n"
"# }\n"
"\n"
"# LaneConnectionID ::= INTEGER (0..255)\n"
"uint8 connection_id\n"
"\n"
"# ZoneLength ::= INTEGER (0..10000)\n"
"# -- Unit = 1 meter, 0 = unknown,\n"
"# -- The value 10000 to be used for Distances >=10000 m\n"
"# -- (e.g. from known point to another point along a\n"
"# -- known path, often against traffic flow direction\n"
"# -- when used for measuring queues)\n"
"uint16 queue_length\n"
"bool queue_length_exists\n"
"\n"
"# ZoneLength ::= INTEGER (0..10000)\n"
"uint16 available_storage_length\n"
"bool available_storage_length_exists\n"
"\n"
"# WaitOnStopline ::= BOOLEAN --- True or False\n"
"# -- If \"true\", the vehicles on this specific connecting\n"
"# -- maneuver have to stop on the stop-line\n"
"# -- and not to enter the collision area\n"
"bool wait_on_stop\n"
"bool wait_on_stop_exists\n"
"\n"
"# PedestrianBicycleDetect ::= BOOLEAN\n"
"# -- true if ANY Pedestrians or Bicyclists are\n"
"# -- detected crossing the target lane or lanes\n"
"bool ped_bicycle_detect\n"
"bool ped_bicycle_detect_exists\n"
"\n"
"# regional #TODO: RegionalExtensions are not yet implemented in asn1c\n"
;
  }

  static const char* value(const ::j2735_msgs::SPAT_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::j2735_msgs::SPAT_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.time_stamp);
      stream.next(m.time_stamp_exists);
      stream.next(m.name);
      stream.next(m.name_exists);
      stream.next(m.intersections);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct SPAT_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::j2735_msgs::SPAT_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::j2735_msgs::SPAT_<ContainerAllocator>& v)
  {
    s << indent << "time_stamp: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.time_stamp);
    s << indent << "time_stamp_exists: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.time_stamp_exists);
    s << indent << "name: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.name);
    s << indent << "name_exists: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.name_exists);
    s << indent << "intersections: ";
    s << std::endl;
    Printer< ::j2735_msgs::IntersectionStateList_<ContainerAllocator> >::stream(s, indent + "  ", v.intersections);
  }
};

} // namespace message_operations
} // namespace ros

#endif // J2735_MSGS_MESSAGE_SPAT_H
